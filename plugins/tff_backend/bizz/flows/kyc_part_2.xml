<?xml version="1.0" encoding="utf-8"?>
<messageFlowDefinitionSet xmlns="https://rogerth.at/api/1/MessageFlow.xsd"
                          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:schemaLocation="https://rogerth.at/api/1/MessageFlow.xsd ">
  <definition
    name="kyc_part_2"
    language="en"
    startReference="{{ start_reference }}">
    <flowCode id="flowcode_check_skip_passport" exceptionReference="message_passport">
      <javascriptCode>function run(rogerthat, messageFlowRun) {
        var stepId = messageFlowRun.steps[messageFlowRun.steps.length - 1].step_id;
        return {outlet: stepId.indexOf('national_identity_card') !== -1 ? 'flush_results' : 'message_passport'};
      };</javascriptCode>
      <outlet value="message_passport" name="message_passport" reference="message_passport"></outlet>
      <outlet value="flush_results" name="flush_results" reference="flush_results"></outlet>
    </flowCode>
    {% for step in steps %}
    {% if step.type %}
    <formMessage id="{{ step.reference }}"
                 alertIntervalType="NONE"
                 alertType="SILENT"
                 brandingKey="{{ step.branding_key }}"
                 positiveReference="{{ 'flush_monitoring_' if (not loop.last and step.positive_reference) else ''}}{{ step.positive_reference }}"
                 vibrate="false"
                 autoLock="true"
                 negativeReference="{{ step.negative_reference }}">
      <content>{{ step.message }}</content>
      <form positiveButtonConfirmation="" negativeButtonCaption="{{ step.negative_caption }}"
            positiveButtonCaption="{{ step.positive_caption }}" negativeButtonConfirmation="">
        {% if step.type == 'TextLineWidget' %}
        <javascriptValidation>
          function run(result, rogerthat) {
            return result.value ? true : "{% translate language, 'tff', 'this_field_is_required' %}";
          }
        </javascriptValidation>
        <widget xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="TextLineWidget" maxChars="100"
                value="{{ step.value }}"
                keyboardType="{{ step.keyboard_type }}"/>
        {% elif step.type == 'SelectDateWidget' %}
        <widget xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="SelectDateWidget" minuteInterval="15"
                mode="date" unit="&lt;value/&gt;"
        {% if step.value %}date="{{ step.value }}"{% endif %}/>
        {% elif step.type == 'PhotoUploadWidget' %}
        <widget xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="PhotoUploadWidget"
                quality="2000000" gallery="true" camera="true"/>
        {% elif step.type == 'SelectSingleWidget' %}
        <javascriptValidation>
          function run(result, rogerthat) {
            return result.value ? true : "{% translate language, 'tff', 'this_field_is_required_please_make_selection' %}";
          }
        </javascriptValidation>
        <widget xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="SelectSingleWidget">
          {% for choice in step.choices %}
          <choice value="{{ choice.value }}" label="{{ choice.label }}"/>
          {% endfor %}
        </widget>
        {% endif %}
      </form>
    </formMessage>
    {% if not loop.last and step.positive_reference %}
    <resultsFlush
      id="flush_monitoring_{{ step.positive_reference }}"
      reference="{{ step.positive_reference }}"/>
    {% endif %}
    {% else %}
    <message id="{{ step.reference }}" autoLock="true" vibrate="false" alertType="SILENT" alertIntervalType="NONE"
             allowDismiss="false">
      <content>{{ step.message }}</content>
      {% for answer in step.answers %}
      <answer caption="{{ answer.caption }}" action="{{ answer.action }}" id="{{ answer.id }}"
              reference="{{ answer.reference}}"></answer>
      {% endfor %}
    </message>
    {% endif %}
    {% endfor %}
    <resultsFlush
      id="flush_results"
      reference="flush_monitoring_end"/>
    <resultsFlush
      id="flush_monitoring_end_canceled"
      reference="end_canceled"/>
    <resultsFlush
      id="flush_monitoring_end"
      reference="message_thanks_message"/>
    <message id="message_thanks_message" allowDismiss="true" autoLock="true" vibrate="false" alertType="SILENT"
             alertIntervalType="NONE" dismissReference="flush_monitoring_end_the_end" brandingKey="{{ branding_key }}">
      <content>{% translate language, 'tff', 'kyc_end_flow' %}</content>
    </message>
    <resultsFlush
      id="flush_monitoring_end_the_end"
      reference="end_the_end"/>
    <end id="end_canceled"/>
    <end id="end_the_end"/>
  </definition>
</messageFlowDefinitionSet>
